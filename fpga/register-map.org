* Communication protocol

Communication is over I2C or UART (for UART you need to set a jumper).

Example code can be found in the avr/ and gtk/ directory of this repository.

- I2C address: *0x23*
- An I2C write operation consists of the I2C-address, the write flag, and 5 consecutive bytes.
- A UART write operation consists of 5 consecutive bytes.
- The two top/MSB bits of the first byte is the command address field.


** Register map

Variable values are explained in the table further down.

| Byte | Bit | Value       | Value    | Value      |
|------+-----+-------------+----------+------------|
|    0 |  39 | 0           | 1        | 0          |
|      |  38 | 1           | 1        | 0          |
|      |  37 | ssb_am      | reserved | reserved   |
|      |  36 | wide_narrow | reserved | reserved   |
|      |  35 | usb_lsb     | reserved | reserved   |
|      |  34 | tx          | reserved | reserved   |
|      |  33 | key         | reserved | reserved   |
|      |  32 | reserved | reserved | reserved   |
|    1 |  31 | tx_att[1]      | clar     | reserved   |
|      |  30 | tx_att[0]    | clar     | reserved   |
|      |  29 | reserved    | clar     | reserved   |
|      |  28 | rx_att[1]    | clar     | reserved   |
|      |  27 | rx_att[0]    | clar     | reserved   |
|      |  26 | reserved    | clar     | reserved   |
|      |  25 | if_freq[2]    | clar     | reserved   |
|      |  24 | if_freq[1]    | freq     | reserved   |
|    2 |  23 | if_freq[0]    | freq     | reserved   |
|      |  22 | reserved    | freq     | reserved   |
|      |  21 | cw_tx_nomod    | freq     | reserved   |
|      |  20 | reserved    | freq     | reserved   |
|      |  19 | fconf    | freq     | reserved   |
|      |  18 | reserved    | freq     | reserved   |
|      |  17 | reserved    | freq     | reserved   |
|      |  16 | reserved    | freq     | reserved   |
|    3 |  15 | reserved    | freq     | reserved   |
|      |  14 | reserved    | freq     | reserved   |
|      |  13 | reserved    | freq     | reserved   |
|      |  12 | reserved    | freq     | reserved   |
|      |  11 | reserved    | freq     | reserved   |
|      |  10 | reserved    | freq     | reserved   |
|      |   9 | reserved    | freq     | reserved   |
|      |   8 | reserved    | freq     | reserved   |
|    4 |   7 | reserved    | freq     | reserved   |
|      |   6 | reserved    | freq     | reserved   |
|      |   5 | reserved    | freq     | audio gain |
|      |   4 | reserved    | freq     | audio gain |
|      |   3 | reserved    | freq     | audio gain |
|      |   2 | reserved    | freq     | audio gain |
|      |   1 | reserved    | freq     | audio gain |
|      |   0 | reserved    | freq     | audio gain |



| Bit               | Value                                                                                             |
|-------------------+---------------------------------------------------------------------------------------------------|
| ssb_am:           | 1: SSB, 0: AM                                                                                     |
| wide_narrow:      | 1: Wide RX filter, 0: Narrow RX filter                                                            |
| usb_lsb:          | 1: USB, 0: LSB                                                                                    |
| tx:               | 1: Forced TX, 0: RX or TX when PTT pin low                                                        |
| key:              | 1: Forced CW key, 0: Controlled by KEY pin                                                        |
| fconf:           | 1: Indirect frequency mode with external LO synth, 0: Direct mode                                  |
| cw_tx_nomod:    | 1: Bypass weaver modulator in CW TX (clean spectrum), 0: Modulate with audio tone |
| tx_att[1..0]:    | TX attenuation in steps of 6dB, 00: Full TX power                                                  |
| rx_att[1..0]:    | RX attenuation in steps of 6dB, 00: Full RX gain           |
| if_freq[2..0:    | 001: IF=45MHz, 010: IF=21.4MHz         |
| clar[6..0]:       | Clarifier / RX offset value in 2s complement, steps of 120e6/2^28 Hz                              |
| freq[24..0]:      | Carrier frequency, in steps of 120e6/2^25 Hz                                                      |
| audio gain[5..0]: | Speaker audio attenuation, 011111 = mute, 000000 = 0dB, MSB always 0 (see TLV320AIC20K datasheet) |

Freq sets the frequency generated from DAC A. Recommended range is 1-45 MHz.
If DAC A is driving a mixer, the IF frequency needs to be compensated for. E.g. if the IF is 45 MHz and fRX is the frequency of reception, the freq value should be set to (45e6-fRX)*2^25/120e6, rounded to nearest integer value.

(The DAC A frequency can also be used as a tunable reference for an external PLL synthesizer (like e.g. for 144 MHz operation). The end/user frequency then has to be calculated accordingly.)  

The clarifier value sets an offset for the frequency generated by DAC B, in RX mode only. It can be used for fine tuning of the RX frequency. If not needed simply write a value of null.

** Status byte
   
An I2C reading operation gives the status byte.													
Every fifth byte sent over UART results in the status byte being sent back.
Simply transmit [0x00 0x00 0x00 0x00 0x00] to read without altering any register.


| Bit nr |          |                                       |                                       
|--------+----------+---------------------------------------+
|      7 | TX/RX    | 1: TX, 0: RX â€“ For TX/RX indication   |
|      6 | Reserved |                                       |
|      5 | RSSI     | MSB                                   |
|      4 | RSSI     | Each step in RSSI corresponds to 6 dB |
|      3 | RSSI     |                                       |
|      2 | RSSI     |                                       |
|      1 | RSSI     |                                       |
|      0 | RSSI     | LSB                                   |
